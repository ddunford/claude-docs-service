# Pre-commit configuration for document-service
repos:
  # General hooks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: trailing-whitespace
      - id: end-of-file-fixer
      - id: check-yaml
      - id: check-added-large-files
        args: ['--maxkb=1000']
      - id: check-case-conflict
      - id: check-merge-conflict
      - id: check-json
      - id: check-toml
      - id: check-xml
      - id: debug-statements
      - id: detect-private-key
      - id: mixed-line-ending
        args: ['--fix=lf']
      - id: requirements-txt-fixer
      - id: fix-byte-order-marker

  # Python formatting
  - repo: https://github.com/psf/black
    rev: 23.12.1
    hooks:
      - id: black
        language_version: python3.11
        args: ['--line-length=100']

  # Python linting
  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.1.8
    hooks:
      - id: ruff
        args: ['--fix', '--exit-non-zero-on-fix']

  # Type checking
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.8.0
    hooks:
      - id: mypy
        additional_dependencies: 
          - types-requests
          - types-redis
          - types-setuptools
          - pydantic
        args: ['--ignore-missing-imports']

  # Security scanning
  - repo: https://github.com/PyCQA/bandit
    rev: 1.7.5
    hooks:
      - id: bandit
        args: ['-c', 'pyproject.toml']

  # Dockerfile linting
  - repo: https://github.com/hadolint/hadolint
    rev: v2.12.0
    hooks:
      - id: hadolint-docker
        args: ['--ignore', 'DL3008', '--ignore', 'DL3009']

  # YAML formatting
  - repo: https://github.com/pre-commit/mirrors-prettier
    rev: v3.1.0
    hooks:
      - id: prettier
        files: \.(yaml|yml|json|md)$
        exclude: |
          (?x)^(
            \.github/workflows/.*\.yml$|
            docker-compose.*\.yml$
          )$

  # Shell script linting
  - repo: https://github.com/shellcheck-py/shellcheck-py
    rev: v0.9.0.6
    hooks:
      - id: shellcheck
        args: ['--severity=warning']

  # Protobuf linting
  - repo: https://github.com/bufbuild/buf
    rev: v1.28.1
    hooks:
      - id: buf-lint
        files: \.proto$

  # Commit message format
  - repo: https://github.com/commitizen-tools/commitizen
    rev: v3.13.0
    hooks:
      - id: commitizen
        stages: [commit-msg]

  # Local hooks for project-specific checks
  - repo: local
    hooks:
      - id: pytest-check
        name: pytest-check
        entry: pytest
        language: system
        pass_filenames: false
        always_run: true
        args: ['--co', '-q']
        stages: [push]
      
      - id: docker-compose-check
        name: docker-compose-check
        entry: docker-compose
        language: system
        files: docker-compose.*\.yml$
        args: ['config', '-q']
        pass_filenames: false
        
      - id: proto-generation-check
        name: proto-generation-check
        entry: ./scripts/generate_protos.sh
        language: system
        files: \.proto$
        pass_filenames: false

# Configuration
ci:
  autofix_commit_msg: |
    [pre-commit.ci] auto fixes from pre-commit hooks
    
    for more information, see https://pre-commit.ci
  autofix_prs: true
  autoupdate_branch: ''
  autoupdate_commit_msg: '[pre-commit.ci] pre-commit autoupdate'
  autoupdate_schedule: weekly
  skip: []
  submodules: false

# Exclude patterns
exclude: |
  (?x)^(
    docs/.*_pb2\.py$|
    docs/.*_pb2_grpc\.py$|
    \.venv/.*|
    venv/.*|
    \.git/.*|
    migrations/versions/.*
  )$