[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "document-service"
version = "0.1.0"
description = "Document storage microservice with gRPC and REST APIs"
authors = [
    {name = "Core Platform Team", email = "platform@example.com"},
]
dependencies = [
    "fastapi[all]>=0.104.1",
    "grpcio>=1.59.0",
    "grpcio-tools>=1.59.0",
    "protobuf>=4.25.0",
    "pydantic>=2.5.0",
    "sqlalchemy>=2.0.0",
    "alembic>=1.13.0",
    "asyncpg>=0.29.0",
    "redis>=5.0.0",
    "boto3>=1.34.0",
    "minio>=7.2.0",
    "pika>=1.3.0",
    "python-multipart>=0.0.6",
    "python-jose[cryptography]>=3.3.0",
    "passlib[bcrypt]>=1.7.4",
    "opentelemetry-api>=1.21.0",
    "opentelemetry-sdk>=1.21.0",
    "opentelemetry-instrumentation-fastapi>=0.42b0",
    "opentelemetry-instrumentation-grpc>=0.42b0",
    "opentelemetry-exporter-jaeger>=1.21.0",
    "prometheus-client>=0.19.0",
    "structlog>=23.2.0",
    "aiofiles>=23.2.1",
    "httpx>=0.25.0",
    "uvicorn[standard]>=0.24.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.12.0",
    "testcontainers>=3.7.0",
    "moto[s3]>=4.2.0",
    "grpcio-testing>=1.59.0",
    "black>=23.12.0",
    "ruff>=0.1.8",
    "mypy>=1.8.0",
    "pre-commit>=3.6.0",
]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
asyncio_mode = "auto"
addopts = "--cov=app --cov-report=term-missing --cov-report=html"

[tool.black]
line-length = 100
target-version = ['py311']

[tool.ruff]
line-length = 100
target-version = "py311"
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "B904",  # Within `except` clause, raise exceptions with `raise ... from err`
]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
plugins = ["pydantic.mypy"]

[[tool.mypy.overrides]]
module = [
    "moto.*",
    "testcontainers.*",
    "grpc.*",
    "minio.*",
    "pika.*",
]
ignore_missing_imports = true